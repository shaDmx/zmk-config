#include <behaviors.dtsi>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/pointing.h>
#include <dt-bindings/zmk/rgb.h>

&mt { flavor = "tap-preferred"; };

/ {
    chosen { zmk,physical-layout = &default_layout; };

    conditional_layers {
        compatible = "zmk,conditional-layers";

        // Auto-activate SETTINGS layer when holding NUMBER + SYMBOL
    };
};

/ {
    behaviors {
        hml: homerow_mods_left {
            compatible = "zmk,behavior-hold-tap";
            label = "HOMEROW_MODS_LEFT";
            bindings = <&kp>, <&kp>;

            #binding-cells = <2>;
            flavor = "balanced";
            tapping-term-ms = <280>;
            quick-tap-ms = <175>;
            require-prior-idle-ms = <150>;
            hold-trigger-key-positions = <7 8 9 10 11 12 13 21 22 23 24 25 26 27 34 35 36 37 38 39>;
            hold-trigger-on-release;
        };

        hmr: homerow_mods_right {
            compatible = "zmk,behavior-hold-tap";
            label = "HOMEROW_MODS_RIGHT";
            bindings = <&kp>, <&kp>;

            #binding-cells = <2>;
            flavor = "balanced";
            tapping-term-ms = <280>;
            quick-tap-ms = <175>;
            require-prior-idle-ms = <150>;
            hold-trigger-key-positions = <0 1 2 3 4 5 6 14 15 16 17 18 19 20 28 29 30 31 32 33>;
            hold-trigger-on-release;
        };

        copy_paste: copy_paste_tap_dance {
            compatible = "zmk,behavior-tap-dance";
            label = "COPY_PASTE_TAP_DANCE";
            #binding-cells = <0>;
            tapping-term-ms = <200>;
            bindings = <&kp LC(C)>, <&kp LC(V)>;
        };

        copy_paste_shift: copy_paste_shift_tap_dance {
            compatible = "zmk,behavior-tap-dance";
            label = "COPY_PASTE_SHIFT_TAP_DANCE";
            #binding-cells = <0>;
            tapping-term-ms = <200>;
            bindings = <&kp LS(LC(C))>, <&kp LS(LC(V))>;
        };

        nav_h: nav_h_tap_dance {
            compatible = "zmk,behavior-tap-dance";
            label = "NAV_H_TAP_DANCE";
            #binding-cells = <0>;
            tapping-term-ms = <200>;
            bindings = <&kp LEFT>, <&kp HOME>;
        };

        nav_j: nav_j_tap_dance {
            compatible = "zmk,behavior-tap-dance";
            label = "NAV_J_TAP_DANCE";
            #binding-cells = <0>;
            tapping-term-ms = <200>;
            bindings = <&kp DOWN>, <&kp LC(END)>;
        };

        nav_k: nav_k_tap_dance {
            compatible = "zmk,behavior-tap-dance";
            label = "NAV_K_TAP_DANCE";
            #binding-cells = <0>;
            tapping-term-ms = <200>;
            bindings = <&kp UP>, <&kp LC(HOME)>;
        };

        nav_l: nav_l_tap_dance {
            compatible = "zmk,behavior-tap-dance";
            label = "NAV_L_TAP_DANCE";
            #binding-cells = <0>;
            tapping-term-ms = <200>;
            bindings = <&kp RIGHT>, <&kp END>;
        };

        word_left: word_left_tap_dance {
            compatible = "zmk,behavior-tap-dance";
            label = "WORD_LEFT_TAP_DANCE";
            #binding-cells = <0>;
            tapping-term-ms = <200>;
            bindings = <&kp LC(LEFT)>, <&kp LA(LEFT)>;
        };

        word_down: word_down_tap_dance {
            compatible = "zmk,behavior-tap-dance";
            label = "WORD_DOWN_TAP_DANCE";
            #binding-cells = <0>;
            tapping-term-ms = <200>;
            bindings = <&kp LC(DOWN)>, <&kp PG_DN>;
        };

        word_up: word_up_tap_dance {
            compatible = "zmk,behavior-tap-dance";
            label = "WORD_UP_TAP_DANCE";
            #binding-cells = <0>;
            tapping-term-ms = <200>;
            bindings = <&kp LC(UP)>, <&kp PG_UP>;
        };

        word_right: word_right_tap_dance {
            compatible = "zmk,behavior-tap-dance";
            label = "WORD_RIGHT_TAP_DANCE";
            #binding-cells = <0>;
            tapping-term-ms = <200>;
            bindings = <&kp LC(RIGHT)>, <&kp LA(RIGHT)>;
        };

        thumb_mt: thumb_mod_tap {
            compatible = "zmk,behavior-hold-tap";
            label = "THUMB_MOD_TAP";
            #binding-cells = <2>;
            flavor = "balanced";
            tapping-term-ms = <200>;
            quick-tap-ms = <150>;
            require-prior-idle-ms = <100>;
            bindings = <&kp>, <&kp>;
        };
    };

    keymap {
        compatible = "zmk,keymap";

        default_layer {
            display-name = "QWERTY";

            // --------------------------------------------------------------------------------
            // |  TAB |  Q  |  W  |  E  |  R  |  T  |  MUTE |  PP   |  Y  |  U   |  I  |  O  |  P  | BSPC |
            // |CTRL/ESC| A  |  S  |  D  |  F  |  G  |  LALT |  RALT |  H  |  J   |  K  |  L  |  ;  |  '   |
            // | SHFT |  Z  |  X  |  C  |  V  |  B  |               |  N  |  M   |  ,  |  .  |  /  | ESC  |
            //                    | GUI | LWR | SPC |               | ENT | RSE  | ALT |

            bindings = <
&kp TAB                            &kp Q            &kp W            &kp E              &kp R                   &kp T                         &kp C_MUTE   &kp C_PP           &kp Y                     &kp U                            &kp I               &kp O            &kp P                &kp BSPC
&mt LA(LC(LG(LEFT_SHIFT))) ESCAPE  &hml LEFT_GUI A  &hml LEFT_ALT S  &hml LEFT_SHIFT D  &hml LEFT_CONTROL F     &kp G                         &copy_paste  &copy_paste_shift  &kp H                     &hmr RIGHT_CONTROL J             &hmr RIGHT_SHIFT K  &hmr LEFT_ALT L  &hmr RIGHT_GUI SEMI  &kp SQT
&kp LSHFT                          &kp Z            &kp X            &kp C              &kp V                   &kp B                                                         &kp N                     &kp M                            &kp COMMA           &kp DOT          &kp FSLH             &mo 4
                                                                     &lt 1 SPACE        &thumb_mt LEFT_ALT TAB  &thumb_mt LEFT_CONTROL SPACE                                  &thumb_mt LEFT_GUI ENTER  &thumb_mt RIGHT_SHIFT BACKSPACE  &lt 2 DELETE
            >;

            sensor-bindings = <&inc_dec_kp C_VOL_DN C_VOL_UP &inc_dec_kp PG_UP PG_DN &inc_dec_kp C_PREV C_NEXT &inc_dec_kp C_BRI_DN C_BRI_UP>;
        };

        lower_layer {
            display-name = "NUMBER";

            // -----------------------------------------------------------------------------------------
            // |  TAB |  1  |  2  |  3  |  4  |  5  |  LCTRL | RCTRL |  6  |  7  |  8  |  9  |  0  | BSPC |
            // | CTRL |     |     |     |     |     |  LALT  | RALT  | LFT | DWN |  UP | RGT |     |      |
            // | SHFT |     |     |     |     |     |        |       |     |     |     |     |     |      |
            //                    | GUI |     | SPC  |        | ENT   |     | ALT |

            bindings = <
&kp TAB                            &kp N1            &kp N2            &kp N3              &kp N4                &kp N5                  &kp LCTRL    &kp RCTRL          &kp N6          &kp N7                    &kp N8        &kp N9     &kp N0  &kp BSPC
&mt LA(LC(LG(LEFT_SHIFT))) ESCAPE  &hml LEFT_GUI F1  &hml LEFT_ALT F2  &hml LEFT_SHIFT F3  &hml LEFT_CONTROL F4  &kp F5                  &copy_paste  &copy_paste_shift  &nav_h          &nav_j                    &nav_k        &nav_l     &trans  &kp F11
&kp LSHFT                          &kp F6            &kp F7            &kp F8              &kp F9                &kp F10                                                 &word_left      &word_down                &word_up      &word_right &trans  &kp F12
                                                                       &trans              &mt LEFT_ALT TAB      &mt LEFT_CONTROL SPACE                                  &mt LGUI ENTER  &mt LEFT_SHIFT BACKSPACE  &lt 3 DELETE
            >;
        };

        raise_layer {
            display-name = "SYMBOL";

            // -----------------------------------------------------------------------------------------
            // |  TAB |  !  |  @  |  #  |  $  |  %  | LCTRL | RCTRL |  ^  |  &  |  *  |  (  |  )  | BSPC |
            // | CTRL |  {  |  [  |  (  |  <  |  -  |  LALT | RALT  |  =  |  >  |  )  |  ]  |  }  |  \   |
            // | SHFT |  `  |  ~  |  '  |  "  |  _  |               |  +  |  |  |  ;  |  :  |  /  |  ?   |
            //                    | GUI |     | SPC |               | ENT |     | ALT |

            bindings = <
&kp TAB                            &kp EXCL      &kp AT        &kp HASH        &kp DLLR          &kp PRCNT               &kp LCTRL  &kp RCTRL  &kp CARET           &kp AMPS                  &kp ASTRK  &kp LPAR  &kp RPAR  &kp BSPC
&mt LA(LC(LG(LEFT_SHIFT))) ESCAPE  &kp LBRC      &kp LBKT      &kp LPAR        &kp LT            &kp MINUS               &kp LALT   &kp RALT   &kp EQUAL           &kp GT                    &kp RPAR   &kp RBKT  &kp RBRC  &kp BSLH
&kp LSHFT                          &kp GRAVE     &kp TILDE     &kp SQT         &kp DQT           &kp UNDER                                     &kp PLUS            &kp PIPE                  &kp SEMI   &kp COLON &kp FSLH  &kp QMARK
                                                               &kp SPACE       &mt LEFT_ALT TAB  &mt LEFT_CONTROL SPACE                        &mt LEFT_GUI ENTER  &mt LEFT_SHIFT BACKSPACE  &trans
            >;
        };

        settings_layer {
            display-name = "SETTINGS";

            // -----------------------------------------------------------------------------------------
            // |      |     |     |     |     |     |       |       |     |     |     |     |     |      |
            // |      | BT1 | BT2 | BT3 | BT4 | BT5 |       |       |     |     |     |     |     |      |
            // |      | BTCL| RGB | RST | BOOT| UNLK|               |     |     |     |     |     |      |
            //                    |     |     |     |               |     |     |     |

            bindings = <
&trans  &trans        &trans           &trans        &trans        &trans          &trans  &trans  &trans  &trans       &trans      &trans  &trans  &trans
&trans  &bt BT_SEL 0  &bt BT_SEL 1     &bt BT_SEL 2  &bt BT_SEL 3  &bt BT_SEL 4    &trans  &trans  &trans  &trans       &trans      &trans  &trans  &trans
&trans  &bt BT_CLR    &rgb_ug RGB_TOG  &sys_reset    &bootloader   &studio_unlock                  &trans  &bootloader  &sys_reset  &trans  &trans  &trans
                                       &trans        &trans        &trans                          &trans  &trans       &trans
            >;
        };

        mouselayer {
            display-name = "EXTRA 2";
            bindings = <
&trans  &msc SCRL_UP    &mmv MOVE_UP    &msc SCRL_DOWN   &trans  &trans     &trans  &trans  &trans     &trans  &trans  &trans  &trans  &trans
&trans  &mmv MOVE_LEFT  &mmv MOVE_DOWN  &mmv MOVE_RIGHT  &trans  &trans     &trans  &trans  &trans     &trans  &trans  &trans  &trans  &trans
&trans  &msc SCRL_LEFT  &trans          &msc SCRL_RIGHT  &trans  &trans                     &trans     &trans  &trans  &trans  &trans  &trans
                                        &trans           &trans  &mkp LCLK                  &mkp RCLK  &trans  &trans
            >;
        };

        vim_nav_layer {
            display-name = "VIM NAV";
            
            // -----------------------------------------------------------------------------------------
            // | FIND | UNDO | CUT  | COPY |PASTE | REDO|       |       |  gg  |Ctrl+U|Ctrl+D|  G   | INS | DEL  |
            // | CTRL | GUI  | ALT  |SHIFT | CTRL | SEL |       |       |  b   |  h   |  j   |  k   |  l  |  w   |
            // | SHFT |S+UNDO|S+CUT |S+COPY|S+PAST|     |               |  ^   |  {   |  }   |  $   |  0  |  e   |
            //                      |      |      |     |               |      |      |      |
            
            bindings = <
&kp LC(F)    &kp LC(Z)     &kp LC(X)     &kp LC(C)      &kp LC(V)        &kp LC(Y)           &trans  &trans  &kp LC(HOME)     &kp LC(U)        &kp LC(D)        &kp LC(END)      &kp INS    &kp DEL
&kp LCTRL    &kp LEFT_GUI  &kp LEFT_ALT  &kp LEFT_SHIFT &kp LEFT_CONTROL &kp LS(LC(A))       &trans  &trans  &kp LC(LEFT)     &kp LEFT         &kp DOWN         &kp UP           &kp RIGHT  &kp LC(RIGHT)
&kp LSHFT    &kp LS(LC(Z)) &kp LS(LC(X)) &kp LS(LC(C))  &kp LS(LC(V))    &trans                              &kp HOME         &kp LC(UP)       &kp LC(DOWN)     &kp END          &kp LC(A)  &kp LA(RIGHT)
                                         &trans         &trans           &trans                              &trans           &trans           &trans
            >;
        };

        extra_layer_4 {
            display-name = "EXTRA 4";
            bindings = <
&trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans
&trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans
&trans  &trans  &trans  &trans  &trans  &trans                  &trans  &trans  &trans  &trans  &trans  &trans
                        &trans  &trans  &trans                  &trans  &trans  &trans
            >;
        };

        extra_layer_5 {
            display-name = "EXTRA 5";
            bindings = <
&trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans
&trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans
&trans  &trans  &trans  &trans  &trans  &trans                  &trans  &trans  &trans  &trans  &trans  &trans
                        &trans  &trans  &trans                  &trans  &trans  &trans
            >;
        };

        extra_layer_6 {
            display-name = "EXTRA 6";
            bindings = <
&trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans
&trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans
&trans  &trans  &trans  &trans  &trans  &trans                  &trans  &trans  &trans  &trans  &trans  &trans
                        &trans  &trans  &trans                  &trans  &trans  &trans
            >;
        };
    };
};
